# General (non-Sentry-specific) overrides for opentelemetry-demo Helm chart (https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-demo)
---
observability:
  otelcol:
    enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
  jaeger:
    enabled: true

prometheus:
  # TODO(tonyo): run in the otel nodepool
  rbac:
    create: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: otel
          static_configs:
            - targets:
                - "otel-demo-otelcol:9464"
        - job_name: otel-collector
          static_configs:
            - targets:
                - "otel-demo-otelcol:8888"
grafana:
  # TODO(tonyo): run in the otel nodepool
  rbac:
    create: false
    pspEnabled: false

jaeger:
  # TODO(tonyo): run in the otel nodepool
  allInOne:
    resources:
      requests:
        cpu: 50m
      limits:
        memory: 350Mi

default:
  # Run all demo components on a separate node pool
  schedulingRules:
    nodeSelector:
      nodepool.sentry.io/name: otel-demo
    tolerations:
      - key: "nodepool-dedicated"
        operator: "Equal"
        value: "otel-demo"
        effect: "NoSchedule"

# Demo components
components:
  # Main services

  accountingService:
    resources:
      requests:
        cpu: 50m
  adService:
    resources:
      requests:
        cpu: 50m
  cartService:
    resources:
      requests:
        cpu: 50m
  checkoutService:
    resources:
      requests:
        cpu: 50m
  currencyService:
    resources:
      requests:
        cpu: 50m
  emailService:
    resources:
      requests:
        cpu: 50m
  featureflagService:
    resources:
      requests:
        cpu: 50m
  frauddetectionService:
    resources:
      requests:
        cpu: 50m
  frontend:
    resources:
      requests:
        cpu: 50m
  frontendProxy:
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 100Mi
  loadgenerator:
    resources:
      requests:
        cpu: 50m
  paymentService:
    resources:
      requests:
        cpu: 50m
        memory: 200Mi
      limits:
        memory: 200Mi
  productCatalogService:
    resources:
      requests:
        cpu: 50m
  quoteService:
    resources:
      requests:
        cpu: 50m
  recommendationService:
    resources:
      requests:
        cpu: 50m
  shippingService:
    resources:
      requests:
        cpu: 50m

  # Supporting services and data storages

  ffsPostgres:
    resources:
      requests:
        cpu: 50m
  kafka:
    resources:
      requests:
        cpu: 50m
  redis:
    resources:
      requests:
        cpu: 50m
